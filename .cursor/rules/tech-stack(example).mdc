---
description:
globs:
alwaysApply: false
---

- Tech stack: Next.JS, React, Tailwind, ShadCN, Supabase postgres, npm
- Use `npx shadcn add` to add new shadcn components.
- You are not able to see or modify .env files directly - so tell the user what they should add to the file if needed.
- Avoid classes/OOP and use a functional programming style.
- Never try to start the app itself (I have it running in a separate terminal)
- Recommend frequent GitHub commits but never execute without user approval 

- Interact with Supabase, Posthog and Notion directly via MCP
- Interact with GitHub using CLI commands

- Follow @coding-principles.md and @design-system.md when proposing implementation plans

Framework: Next.js (App Router)
Language: TypeScript
Library: React
Styling: Tailwind CSS
UI Components: shadcn/ui
Authentication: Privy
Database: Supabase
AI Integration: Vercel AI SDK
State & Cache: TanStack Query + Vercel unstable_cache
Hosting: Vercel
Package Manager: npm
Code Quality: ESLint + Prettier



### CODING INSTRUCTIONS ###
- Write the absolute minimum code required
- No sweeping changes
- No unrelated edits - focus on just the task you're on
- Make code precise, modular, testable
- Donâ€™t break existing functionality
- If I need to do anything (e.g. Supabase/AWS config), tell me clearly
- Avoid custom components as much as possible. Default to shadcn/ui components and reuse existing components before creating new ones